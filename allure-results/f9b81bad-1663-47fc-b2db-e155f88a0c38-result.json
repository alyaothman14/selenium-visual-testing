{"name": "Visual testing login page, should pass", "status": "broken", "statusDetails": {"message": "Exception: 42707 pixels differ from the expected result", "trace": "self = <tests.test_login.TestLogin object at 0x10fee1dd0>\nrequest = <FixtureRequest for <Function test_visual_login_pass[firefox]>>\n\n    @allure.description(\"Visual testing login page, should pass\")\n    @allure.title('Visual testing login page, should pass')\n    @pytest.mark.Visual\n    def test_visual_login_pass(self,request):\n        masked_element = {(By.XPATH, \"//div[contains(@class, 'latest__left')]\"),(By.XPATH, \"//div[contains(@class, 'latest__right')]\")}\n        self.nav_bar.click_login_icon()\n>       assert expect_to_have_screenshot(request,self.driver,masked_locators=masked_element)==True\n\ntests/test_login.py:27: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nrequest = <FixtureRequest for <Function test_visual_login_pass[firefox]>>\ndriver = <selenium.webdriver.firefox.webdriver.WebDriver (session=\"4090d61b-9673-4002-b5ea-c3c1fd0b2ec5\")>\nkwargs = {'masked_locators': {('xpath', \"//div[contains(@class, 'latest__left')]\"), ('xpath', \"//div[contains(@class, 'latest__right')]\")}}\ntest_name = 'test_visual_login_pass[firefox]'\ndirectory = '/Users/alya/Documents/sporty/sporty/selenium-testing-lib-python/tests/test_login'\nupdate_snapshot = False\nexpected_snapshot_location = '/Users/alya/Documents/sporty/sporty/selenium-testing-lib-python/tests/test_login/test_visual_login_pass[firefox]-baseline.png'\nactual_snapshot_location = '/Users/alya/Documents/sporty/sporty/selenium-testing-lib-python/tests/test_login/test_visual_login_pass[firefox]-actual.png'\ndiff_snapshot_location = '/Users/alya/Documents/sporty/sporty/selenium-testing-lib-python/tests/test_login/test_visual_login_pass[firefox]-diff.png'\nthreshold = 0.1\n\n    def expect_to_have_screenshot(request: pytest.FixtureRequest,driver:Union[Chrome, Firefox],**kwargs)-> bool:\n        test_name=request.node.name\n        directory= f'{request.node.fspath.dirname}/{request.node.fspath.purebasename}'\n        update_snapshot = request.config.getoption(\"--update-snapshot\")\n        expected_snapshot_location= f'{directory}/{test_name}-baseline.png'\n        actual_snapshot_location= f'{directory}/{test_name}-actual.png'\n        diff_snapshot_location=f'{directory}/{test_name}-diff.png'\n        threshold=kwargs.get('threshold', 0.1)\n    \n        if os.path.exists(actual_snapshot_location):\n            os.remove(actual_snapshot_location)\n        if os.path.exists(diff_snapshot_location):\n            os.remove(diff_snapshot_location)\n        if not os.path.isfile(expected_snapshot_location) and not update_snapshot:\n            raise Exception(\"Baseline screenshot does not exist. Please run the command with --update-snapshot\")\n        wait_for_network_ideal(driver)\n        if 'masked_locators' in kwargs:\n            z_index='2000' if not 'z-index' in kwargs else kwargs[\"z-index\"]\n            mask_element(kwargs['masked_locators'],driver,z_index)\n        if update_snapshot:\n            allure.step(\"Take baseline snapshot\")\n            if not os.path.exists(directory):\n                os.makedirs(directory)\n            if('full_screenshot' in kwargs):\n                driver.save_full_page_screenshot(expected_snapshot_location)\n                return True\n            else:\n                driver.save_screenshot(expected_snapshot_location)\n                return True\n    \n        if('full_screenshot' in kwargs):\n            driver.save_full_page_screenshot(actual_snapshot_location)\n        else:\n            driver.save_screenshot(actual_snapshot_location)\n        if not update_snapshot:\n            expected_image= Image.open(expected_snapshot_location).convert('RGBA')\n            actual_image= Image.open(actual_snapshot_location).convert('RGBA')\n            diff_image = Image.new(\"RGBA\", expected_image.size)\n            allure.step(\"Comparing screenshots\")\n            diff_pixels= pixelmatch(expected_image,actual_image,diff_image,threshold)\n>           if diff_pixels>threshold:\nE           Exception: 42707 pixels differ from the expected result\n\nutilities/compare_visual.py:58: Exception"}, "description": "Visual testing login page, should pass", "steps": [{"name": "User clicks login icon in nav bar", "status": "passed", "start": 1683483044791, "stop": 1683483045200}], "attachments": [{"name": "stdout", "source": "3ef2db69-9c79-4f78-a2a3-98c895774c3f-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "ed0afd7a-4257-4adb-9b3a-646c2c16f218-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "browser", "value": "'firefox'"}], "start": 1683483044791, "stop": 1683483049607, "uuid": "f9ccbe04-7dfc-40c7-aaa6-d07b4c72a541", "historyId": "a3cc2e4448636cad356f858d163ff905", "testCaseId": "0739cf6828f5bef2ca710b5f949c7d10", "fullName": "tests.test_login.TestLogin#test_visual_login_pass", "labels": [{"name": "tag", "value": "firefox"}, {"name": "story", "value": "Login functionality"}, {"name": "tag", "value": "Visual"}, {"name": "tag", "value": "@pytest.mark.usefixtures('setup')"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_login"}, {"name": "subSuite", "value": "TestLogin"}, {"name": "host", "value": "MacBook-Pro.local"}, {"name": "thread", "value": "57094-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_login"}]}