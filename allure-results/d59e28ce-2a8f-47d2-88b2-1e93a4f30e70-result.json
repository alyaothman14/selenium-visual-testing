{"name": "Visual testing login page, should fail", "status": "broken", "statusDetails": {"message": "Exception: 1265 pixels differ from the expected result", "trace": "self = <tests.test_login.TestLogin object at 0x10bc37090>\nrequest = <FixtureRequest for <Function test_visual_login_fail[chrome]>>\n\n    @allure.description(\"Visual testing login page, should fail\")\n    @allure.title('Visual testing login page, should fail')\n    @pytest.mark.Visual\n    def test_visual_login_fail(self,request):\n        self.nav_bar.click_login_icon()\n        #This to make the test fail\n        element =self.driver.find_element(By.XPATH, \"//*[contains(text(), 'Log in or register with your mobile number')]\")\n        self.driver.execute_script(\"arguments[0].textContent = 'New text value';\", element)\n>       assert expect_to_have_screenshot(request,self.driver)\n\ntests/test_login.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nrequest = <FixtureRequest for <Function test_visual_login_fail[chrome]>>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"6c35d9ffaa3714ab155a646b74ffdf65\")>\nkwargs = {}, test_name = 'test_visual_login_fail[chrome]'\ndirectory = '/Users/alya/Documents/sporty/sporty/selenium-testing-lib-python/tests/test_login'\nupdate_snapshot = False\nexpected_snapshot_location = '/Users/alya/Documents/sporty/sporty/selenium-testing-lib-python/tests/test_login/test_visual_login_fail[chrome]-baseline.png'\nactual_snapshot_location = '/Users/alya/Documents/sporty/sporty/selenium-testing-lib-python/tests/test_login/test_visual_login_fail[chrome]-actual.png'\ndiff_snapshot_location = '/Users/alya/Documents/sporty/sporty/selenium-testing-lib-python/tests/test_login/test_visual_login_fail[chrome]-diff.png'\nthreshold = 0.1\n\n    def expect_to_have_screenshot(request: pytest.FixtureRequest,driver:Union[Chrome, Firefox],**kwargs)-> bool:\n        test_name=request.node.name\n        directory= f'{request.node.fspath.dirname}/{request.node.fspath.purebasename}'\n        update_snapshot = request.config.getoption(\"--update-snapshot\")\n        expected_snapshot_location= f'{directory}/{test_name}-baseline.png'\n        actual_snapshot_location= f'{directory}/{test_name}-actual.png'\n        diff_snapshot_location=f'{directory}/{test_name}-diff.png'\n        threshold=kwargs.get('threshold', 0.1)\n    \n        if os.path.exists(actual_snapshot_location):\n            os.remove(actual_snapshot_location)\n        if os.path.exists(diff_snapshot_location):\n            os.remove(diff_snapshot_location)\n        if not os.path.isfile(expected_snapshot_location) and not update_snapshot:\n            raise Exception(\"Baseline screenshot does not exist. Please run the command with --update-snapshot\")\n        wait_for_network_ideal(driver)\n        if 'masked_locators' in kwargs:\n            z_index='2000' if not 'z-index' in kwargs else kwargs[\"z-index\"]\n            mask_element(kwargs['masked_locators'],driver,z_index)\n        if update_snapshot:\n            if not os.path.exists(directory):\n                os.makedirs(directory)\n            if('full_screenshot' in kwargs):\n                driver.save_full_page_screenshot(expected_snapshot_location)\n                return True\n            else:\n                driver.save_screenshot(expected_snapshot_location)\n                return True\n    \n        if('full_screenshot' in kwargs):\n            driver.save_full_page_screenshot(actual_snapshot_location)\n        else:\n            driver.save_screenshot(actual_snapshot_location)\n        if not update_snapshot:\n            expected_image= Image.open(expected_snapshot_location).convert('RGBA')\n            actual_image= Image.open(actual_snapshot_location).convert('RGBA')\n            diff_image = Image.new(\"RGBA\", expected_image.size)\n            diff_pixels= pixelmatch(expected_image,actual_image,diff_image,threshold)\n            if diff_pixels>threshold:\n                diff_image.save(diff_snapshot_location)\n>               raise Exception(f\"{diff_pixels} pixels differ from the expected result\")\nE               Exception: 1265 pixels differ from the expected result\n\nutilities/compare_visual.py:57: Exception"}, "description": "Visual testing login page, should fail", "steps": [{"name": "User clicks login icon in nav bar", "status": "passed", "start": 1683481016443, "stop": 1683481019198}], "attachments": [{"name": "stdout", "source": "044d576f-c195-4f98-b268-787ac059a594-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "browser", "value": "'chrome'"}], "start": 1683481016443, "stop": 1683481023094, "uuid": "a2d7fb27-0067-4386-80c5-fe657ad99849", "historyId": "5bb1af231f67c488cc62799f812f8ca5", "testCaseId": "1ad1f4c16d681ab3cb04544182cc3ac3", "fullName": "tests.test_login.TestLogin#test_visual_login_fail", "labels": [{"name": "tag", "value": "chrome"}, {"name": "story", "value": "Login functionality"}, {"name": "tag", "value": "Visual"}, {"name": "tag", "value": "@pytest.mark.usefixtures('setup')"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_login"}, {"name": "subSuite", "value": "TestLogin"}, {"name": "host", "value": "MacBook-Pro.local"}, {"name": "thread", "value": "55063-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_login"}]}