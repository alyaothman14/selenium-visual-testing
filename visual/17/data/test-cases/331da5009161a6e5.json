{"uid":"331da5009161a6e5","name":"Visual testing login page, should fail","fullName":"tests.test_login.TestLogin#test_visual_login_fail","historyId":"7f2efdab587962a83831b5ab7d33c006","time":{"start":1683489329856,"stop":1683489352478,"duration":22622},"description":"Visual testing login page, should fail","descriptionHtml":"<p>Visual testing login page, should fail</p>\n","status":"broken","statusMessage":"Exception: 123221 pixels differ from the expected result","statusTrace":"self = <tests.test_login.TestLogin object at 0x7fe0f1e9d1d0>\nrequest = <FixtureRequest for <Function test_visual_login_fail[chrome]>>\n\n    @allure.description(\"Visual testing login page, should fail\")\n    @allure.title('Visual testing login page, should fail')\n    @pytest.mark.Visual\n    def test_visual_login_fail(self,request):\n        self.nav_bar.click_login_icon()\n        #This to make the test fail\n        if(request.config.getoption(\"--update-snapshot\")==False):\n            element =self.driver.find_element(By.XPATH, \"//*[contains(text(), 'Log in or register with your mobile number')]\")\n            self.driver.execute_script(\"arguments[0].textContent = 'New text value';\", element)\n>       assert expect_to_have_screenshot(request,self.driver)\n\ntests/test_login.py:19: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nrequest = <FixtureRequest for <Function test_visual_login_fail[chrome]>>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"d0f3a0ecbe78b349d461f917fc6c8192\")>\nkwargs = {}, test_name = 'test_visual_login_fail[chrome]'\ndirectory = '/home/runner/work/selenium-visual-testing/selenium-visual-testing/tests/test_login'\nupdate_snapshot = False\nexpected_snapshot_location = '/home/runner/work/selenium-visual-testing/selenium-visual-testing/tests/test_login/test_visual_login_fail[chrome]-baseline.png'\nactual_snapshot_location = '/home/runner/work/selenium-visual-testing/selenium-visual-testing/tests/test_login/test_visual_login_fail[chrome]-actual.png'\ndiff_snapshot_location = '/home/runner/work/selenium-visual-testing/selenium-visual-testing/tests/test_login/test_visual_login_fail[chrome]-diff.png'\nthreshold = 0.1\n\n    def expect_to_have_screenshot(request: pytest.FixtureRequest,driver:Union[Chrome, Firefox],**kwargs)-> bool:\n        test_name=request.node.name\n        directory= f'{request.node.fspath.dirname}/{request.node.fspath.purebasename}'\n        update_snapshot = request.config.getoption(\"--update-snapshot\")\n        expected_snapshot_location= f'{directory}/{test_name}-baseline.png'\n        actual_snapshot_location= f'{directory}/{test_name}-actual.png'\n        diff_snapshot_location=f'{directory}/{test_name}-diff.png'\n        threshold=kwargs.get('threshold', 0.1)\n    \n        if os.path.exists(actual_snapshot_location):\n            os.remove(actual_snapshot_location)\n        if os.path.exists(diff_snapshot_location):\n            os.remove(diff_snapshot_location)\n        if not os.path.isfile(expected_snapshot_location) and not update_snapshot:\n            raise Exception(\"Baseline screenshot does not exist. Please run the command with --update-snapshot\")\n        wait_for_network_ideal(driver)\n        if 'masked_locators' in kwargs:\n            z_index='2000' if not 'z-index' in kwargs else kwargs[\"z-index\"]\n            mask_element(kwargs['masked_locators'],driver,z_index)\n        if update_snapshot:\n            allure.step(\"Take baseline snapshot\")\n            if not os.path.exists(directory):\n                os.makedirs(directory)\n            if os.path.exists(expected_snapshot_location):\n                os.remove(expected_snapshot_location)\n            if('full_screenshot' in kwargs):\n                driver.save_full_page_screenshot(expected_snapshot_location)\n                return True\n            else:\n                driver.save_screenshot(expected_snapshot_location)\n                return True\n    \n        if('full_screenshot' in kwargs):\n            driver.save_full_page_screenshot(actual_snapshot_location)\n        else:\n            driver.save_screenshot(actual_snapshot_location)\n        if not update_snapshot:\n            expected_image= Image.open(expected_snapshot_location).convert('RGBA')\n            actual_image= Image.open(actual_snapshot_location).convert('RGBA')\n            diff_image = Image.new(\"RGBA\", expected_image.size)\n            allure.step(\"Comparing screenshots\")\n            diff_pixels= pixelmatch(expected_image,actual_image,diff_image,threshold)\n            if diff_pixels>threshold:\n                diff_image.save(diff_snapshot_location)\n>               raise Exception(f\"{diff_pixels} pixels differ from the expected result\")\nE               Exception: 123221 pixels differ from the expected result\n\nutilities/compare_visual.py:70: Exception","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[{"name":"setup","time":{"start":1683489312379,"stop":1683489329855,"duration":17476},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"testStage":{"description":"Visual testing login page, should fail","status":"broken","statusMessage":"Exception: 123221 pixels differ from the expected result","statusTrace":"self = <tests.test_login.TestLogin object at 0x7fe0f1e9d1d0>\nrequest = <FixtureRequest for <Function test_visual_login_fail[chrome]>>\n\n    @allure.description(\"Visual testing login page, should fail\")\n    @allure.title('Visual testing login page, should fail')\n    @pytest.mark.Visual\n    def test_visual_login_fail(self,request):\n        self.nav_bar.click_login_icon()\n        #This to make the test fail\n        if(request.config.getoption(\"--update-snapshot\")==False):\n            element =self.driver.find_element(By.XPATH, \"//*[contains(text(), 'Log in or register with your mobile number')]\")\n            self.driver.execute_script(\"arguments[0].textContent = 'New text value';\", element)\n>       assert expect_to_have_screenshot(request,self.driver)\n\ntests/test_login.py:19: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nrequest = <FixtureRequest for <Function test_visual_login_fail[chrome]>>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"d0f3a0ecbe78b349d461f917fc6c8192\")>\nkwargs = {}, test_name = 'test_visual_login_fail[chrome]'\ndirectory = '/home/runner/work/selenium-visual-testing/selenium-visual-testing/tests/test_login'\nupdate_snapshot = False\nexpected_snapshot_location = '/home/runner/work/selenium-visual-testing/selenium-visual-testing/tests/test_login/test_visual_login_fail[chrome]-baseline.png'\nactual_snapshot_location = '/home/runner/work/selenium-visual-testing/selenium-visual-testing/tests/test_login/test_visual_login_fail[chrome]-actual.png'\ndiff_snapshot_location = '/home/runner/work/selenium-visual-testing/selenium-visual-testing/tests/test_login/test_visual_login_fail[chrome]-diff.png'\nthreshold = 0.1\n\n    def expect_to_have_screenshot(request: pytest.FixtureRequest,driver:Union[Chrome, Firefox],**kwargs)-> bool:\n        test_name=request.node.name\n        directory= f'{request.node.fspath.dirname}/{request.node.fspath.purebasename}'\n        update_snapshot = request.config.getoption(\"--update-snapshot\")\n        expected_snapshot_location= f'{directory}/{test_name}-baseline.png'\n        actual_snapshot_location= f'{directory}/{test_name}-actual.png'\n        diff_snapshot_location=f'{directory}/{test_name}-diff.png'\n        threshold=kwargs.get('threshold', 0.1)\n    \n        if os.path.exists(actual_snapshot_location):\n            os.remove(actual_snapshot_location)\n        if os.path.exists(diff_snapshot_location):\n            os.remove(diff_snapshot_location)\n        if not os.path.isfile(expected_snapshot_location) and not update_snapshot:\n            raise Exception(\"Baseline screenshot does not exist. Please run the command with --update-snapshot\")\n        wait_for_network_ideal(driver)\n        if 'masked_locators' in kwargs:\n            z_index='2000' if not 'z-index' in kwargs else kwargs[\"z-index\"]\n            mask_element(kwargs['masked_locators'],driver,z_index)\n        if update_snapshot:\n            allure.step(\"Take baseline snapshot\")\n            if not os.path.exists(directory):\n                os.makedirs(directory)\n            if os.path.exists(expected_snapshot_location):\n                os.remove(expected_snapshot_location)\n            if('full_screenshot' in kwargs):\n                driver.save_full_page_screenshot(expected_snapshot_location)\n                return True\n            else:\n                driver.save_screenshot(expected_snapshot_location)\n                return True\n    \n        if('full_screenshot' in kwargs):\n            driver.save_full_page_screenshot(actual_snapshot_location)\n        else:\n            driver.save_screenshot(actual_snapshot_location)\n        if not update_snapshot:\n            expected_image= Image.open(expected_snapshot_location).convert('RGBA')\n            actual_image= Image.open(actual_snapshot_location).convert('RGBA')\n            diff_image = Image.new(\"RGBA\", expected_image.size)\n            allure.step(\"Comparing screenshots\")\n            diff_pixels= pixelmatch(expected_image,actual_image,diff_image,threshold)\n            if diff_pixels>threshold:\n                diff_image.save(diff_snapshot_location)\n>               raise Exception(f\"{diff_pixels} pixels differ from the expected result\")\nE               Exception: 123221 pixels differ from the expected result\n\nutilities/compare_visual.py:70: Exception","steps":[{"name":"User clicks login icon in nav bar","time":{"start":1683489329856,"stop":1683489330241,"duration":385},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"attachments":[{"uid":"d848071fd04e4ed","name":"stderr","source":"d848071fd04e4ed.txt","type":"text/plain","size":159}],"parameters":[],"stepsCount":1,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[{"name":"setup::0","time":{"start":1683489352484,"stop":1683489352548,"duration":64},"status":"passed","steps":[{"name":"Visual comparison","time":{"start":1683489352484,"stop":1683489352485,"duration":1},"status":"passed","steps":[],"attachments":[{"uid":"aca2353fcf518c17","name":"Expected screenshot","source":"aca2353fcf518c17.png","type":"image/png","size":43403},{"uid":"cc464d30838c1da","name":"Actual screenshot","source":"cc464d30838c1da.png","type":"image/png","size":287711},{"uid":"dac86ace61af899","name":"Visual diff","source":"dac86ace61af899.png","type":"image/png","size":30012}],"parameters":[],"stepsCount":0,"attachmentsCount":3,"shouldDisplayMessage":false,"hasContent":true}],"attachments":[],"parameters":[],"stepsCount":1,"attachmentsCount":3,"shouldDisplayMessage":false,"hasContent":true}],"labels":[{"name":"tag","value":"chrome"},{"name":"story","value":"Login functionality"},{"name":"tag","value":"Visual"},{"name":"tag","value":"@pytest.mark.usefixtures('setup')"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_login"},{"name":"subSuite","value":"TestLogin"},{"name":"host","value":"fv-az1114-555"},{"name":"thread","value":"1847-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_login"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"browser","value":"'chrome'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"ad33a3a01608ca7e","status":"broken","statusDetails":"Exception: 123221 pixels differ from the expected result","time":{"start":1683489289665,"stop":1683489312280,"duration":22615}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":5,"skipped":0,"passed":0,"unknown":0,"total":5},"items":[{"uid":"b8b96f7d5b269d33","reportUrl":"https://alyaothman14.github.io/selenium-visual-testing/visual/16//#testresult/b8b96f7d5b269d33","status":"broken","statusDetails":"Exception: 123221 pixels differ from the expected result","time":{"start":1683489235388,"stop":1683489259180,"duration":23792}},{"uid":"e0b4718f80227564","reportUrl":"https://alyaothman14.github.io/selenium-visual-testing/visual/15//#testresult/e0b4718f80227564","status":"broken","statusDetails":"Exception: 123221 pixels differ from the expected result","time":{"start":1683489029690,"stop":1683489052256,"duration":22566}},{"uid":"47dc2278e1a76853","reportUrl":"https://alyaothman14.github.io/selenium-visual-testing/visual/14//#testresult/47dc2278e1a76853","status":"broken","statusDetails":"Exception: 123221 pixels differ from the expected result","time":{"start":1683488688778,"stop":1683488711279,"duration":22501}},{"uid":"4dbc38ec12fc995b","reportUrl":"https://alyaothman14.github.io/selenium-visual-testing/visual/12//#testresult/4dbc38ec12fc995b","status":"broken","statusDetails":"Exception: 812 pixels differ from the expected result","time":{"start":1683487763289,"stop":1683487780477,"duration":17188}}]},"tags":["chrome","Visual","@pytest.mark.usefixtures('setup')"]},"source":"331da5009161a6e5.json","parameterValues":["'chrome'"]}