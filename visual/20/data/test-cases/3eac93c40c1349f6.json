{"uid":"3eac93c40c1349f6","name":"Visual testing login page, should fail","fullName":"tests.test_login.TestLogin#test_visual_login_fail","historyId":"bf3b16f7823c09933afe87eb3175cd3b","time":{"start":1683490123648,"stop":1683490156196,"duration":32548},"description":"Visual testing login page, should fail","descriptionHtml":"<p>Visual testing login page, should fail</p>\n","status":"broken","statusMessage":"Exception: 308642 pixels differ from the expected result","statusTrace":"self = <tests.test_login.TestLogin object at 0x7fd812d9fb10>\nrequest = <FixtureRequest for <Function test_visual_login_fail[firefox]>>\n\n    @allure.description(\"Visual testing login page, should fail\")\n    @allure.title('Visual testing login page, should fail')\n    @pytest.mark.Visual\n    def test_visual_login_fail(self,request):\n        self.nav_bar.click_login_icon()\n        #This to make the test fail\n        if(request.config.getoption(\"--update-snapshot\")==False):\n            element =self.driver.find_element(By.XPATH, \"//*[contains(text(), 'Log in or register with your mobile number')]\")\n            self.driver.execute_script(\"arguments[0].textContent = 'New text value';\", element)\n>       assert expect_to_have_screenshot(request,self.driver)\n\ntests/test_login.py:19: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nrequest = <FixtureRequest for <Function test_visual_login_fail[firefox]>>\ndriver = <selenium.webdriver.firefox.webdriver.WebDriver (session=\"d443b119-cbb3-4795-808f-a48f43885c2f\")>\nkwargs = {}, test_name = 'test_visual_login_fail[firefox]'\ndirectory = '/home/runner/work/selenium-visual-testing/selenium-visual-testing/tests/test_login'\nupdate_snapshot = False\nexpected_snapshot_location = '/home/runner/work/selenium-visual-testing/selenium-visual-testing/tests/test_login/test_visual_login_fail[firefox]-baseline.png'\nactual_snapshot_location = '/home/runner/work/selenium-visual-testing/selenium-visual-testing/tests/test_login/test_visual_login_fail[firefox]-actual.png'\ndiff_snapshot_location = '/home/runner/work/selenium-visual-testing/selenium-visual-testing/tests/test_login/test_visual_login_fail[firefox]-diff.png'\nthreshold = 0.1\n\n    def expect_to_have_screenshot(request: pytest.FixtureRequest,driver:Union[Chrome, Firefox],**kwargs)-> bool:\n        test_name=request.node.name\n        directory= f'{request.node.fspath.dirname}/{request.node.fspath.purebasename}'\n        update_snapshot = request.config.getoption(\"--update-snapshot\")\n        expected_snapshot_location= f'{directory}/{test_name}-baseline.png'\n        actual_snapshot_location= f'{directory}/{test_name}-actual.png'\n        diff_snapshot_location=f'{directory}/{test_name}-diff.png'\n        threshold=kwargs.get('threshold', 0.1)\n    \n        if os.path.exists(actual_snapshot_location):\n            os.remove(actual_snapshot_location)\n        if os.path.exists(diff_snapshot_location):\n            os.remove(diff_snapshot_location)\n        if not os.path.isfile(expected_snapshot_location) and not update_snapshot:\n            raise Exception(\"Baseline screenshot does not exist. Please run the command with --update-snapshot\")\n        wait_for_network_ideal(driver)\n        if 'masked_locators' in kwargs:\n            z_index='2000' if not 'z-index' in kwargs else kwargs[\"z-index\"]\n            mask_element(kwargs['masked_locators'],driver,z_index)\n        if update_snapshot:\n            allure.step(\"Take baseline snapshot\")\n            if not os.path.exists(directory):\n                os.makedirs(directory)\n            if os.path.exists(expected_snapshot_location):\n                os.remove(expected_snapshot_location)\n            if('full_screenshot' in kwargs):\n                driver.save_full_page_screenshot(expected_snapshot_location)\n                return True\n            else:\n                driver.save_screenshot(expected_snapshot_location)\n                return True\n    \n        if('full_screenshot' in kwargs):\n            driver.save_full_page_screenshot(actual_snapshot_location)\n        else:\n            driver.save_screenshot(actual_snapshot_location)\n        if not update_snapshot:\n            expected_image= Image.open(expected_snapshot_location).convert('RGBA')\n            actual_image= Image.open(actual_snapshot_location).convert('RGBA')\n            diff_image = Image.new(\"RGBA\", expected_image.size)\n            allure.step(\"Comparing screenshots\")\n            diff_pixels= pixelmatch(expected_image,actual_image,diff_image,threshold)\n            if diff_pixels>threshold:\n                diff_image.save(diff_snapshot_location)\n>               raise Exception(f\"{diff_pixels} pixels differ from the expected result\")\nE               Exception: 308642 pixels differ from the expected result\n\nutilities/compare_visual.py:70: Exception","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[{"name":"setup","time":{"start":1683490094615,"stop":1683490123648,"duration":29033},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"testStage":{"description":"Visual testing login page, should fail","status":"broken","statusMessage":"Exception: 308642 pixels differ from the expected result","statusTrace":"self = <tests.test_login.TestLogin object at 0x7fd812d9fb10>\nrequest = <FixtureRequest for <Function test_visual_login_fail[firefox]>>\n\n    @allure.description(\"Visual testing login page, should fail\")\n    @allure.title('Visual testing login page, should fail')\n    @pytest.mark.Visual\n    def test_visual_login_fail(self,request):\n        self.nav_bar.click_login_icon()\n        #This to make the test fail\n        if(request.config.getoption(\"--update-snapshot\")==False):\n            element =self.driver.find_element(By.XPATH, \"//*[contains(text(), 'Log in or register with your mobile number')]\")\n            self.driver.execute_script(\"arguments[0].textContent = 'New text value';\", element)\n>       assert expect_to_have_screenshot(request,self.driver)\n\ntests/test_login.py:19: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nrequest = <FixtureRequest for <Function test_visual_login_fail[firefox]>>\ndriver = <selenium.webdriver.firefox.webdriver.WebDriver (session=\"d443b119-cbb3-4795-808f-a48f43885c2f\")>\nkwargs = {}, test_name = 'test_visual_login_fail[firefox]'\ndirectory = '/home/runner/work/selenium-visual-testing/selenium-visual-testing/tests/test_login'\nupdate_snapshot = False\nexpected_snapshot_location = '/home/runner/work/selenium-visual-testing/selenium-visual-testing/tests/test_login/test_visual_login_fail[firefox]-baseline.png'\nactual_snapshot_location = '/home/runner/work/selenium-visual-testing/selenium-visual-testing/tests/test_login/test_visual_login_fail[firefox]-actual.png'\ndiff_snapshot_location = '/home/runner/work/selenium-visual-testing/selenium-visual-testing/tests/test_login/test_visual_login_fail[firefox]-diff.png'\nthreshold = 0.1\n\n    def expect_to_have_screenshot(request: pytest.FixtureRequest,driver:Union[Chrome, Firefox],**kwargs)-> bool:\n        test_name=request.node.name\n        directory= f'{request.node.fspath.dirname}/{request.node.fspath.purebasename}'\n        update_snapshot = request.config.getoption(\"--update-snapshot\")\n        expected_snapshot_location= f'{directory}/{test_name}-baseline.png'\n        actual_snapshot_location= f'{directory}/{test_name}-actual.png'\n        diff_snapshot_location=f'{directory}/{test_name}-diff.png'\n        threshold=kwargs.get('threshold', 0.1)\n    \n        if os.path.exists(actual_snapshot_location):\n            os.remove(actual_snapshot_location)\n        if os.path.exists(diff_snapshot_location):\n            os.remove(diff_snapshot_location)\n        if not os.path.isfile(expected_snapshot_location) and not update_snapshot:\n            raise Exception(\"Baseline screenshot does not exist. Please run the command with --update-snapshot\")\n        wait_for_network_ideal(driver)\n        if 'masked_locators' in kwargs:\n            z_index='2000' if not 'z-index' in kwargs else kwargs[\"z-index\"]\n            mask_element(kwargs['masked_locators'],driver,z_index)\n        if update_snapshot:\n            allure.step(\"Take baseline snapshot\")\n            if not os.path.exists(directory):\n                os.makedirs(directory)\n            if os.path.exists(expected_snapshot_location):\n                os.remove(expected_snapshot_location)\n            if('full_screenshot' in kwargs):\n                driver.save_full_page_screenshot(expected_snapshot_location)\n                return True\n            else:\n                driver.save_screenshot(expected_snapshot_location)\n                return True\n    \n        if('full_screenshot' in kwargs):\n            driver.save_full_page_screenshot(actual_snapshot_location)\n        else:\n            driver.save_screenshot(actual_snapshot_location)\n        if not update_snapshot:\n            expected_image= Image.open(expected_snapshot_location).convert('RGBA')\n            actual_image= Image.open(actual_snapshot_location).convert('RGBA')\n            diff_image = Image.new(\"RGBA\", expected_image.size)\n            allure.step(\"Comparing screenshots\")\n            diff_pixels= pixelmatch(expected_image,actual_image,diff_image,threshold)\n            if diff_pixels>threshold:\n                diff_image.save(diff_snapshot_location)\n>               raise Exception(f\"{diff_pixels} pixels differ from the expected result\")\nE               Exception: 308642 pixels differ from the expected result\n\nutilities/compare_visual.py:70: Exception","steps":[{"name":"User clicks login icon in nav bar","time":{"start":1683490123648,"stop":1683490124063,"duration":415},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"attachments":[{"uid":"1c2f09715a6516a9","name":"stderr","source":"1c2f09715a6516a9.txt","type":"text/plain","size":244}],"parameters":[],"stepsCount":1,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[{"name":"setup::0","time":{"start":1683490156201,"stop":1683490156793,"duration":592},"status":"passed","steps":[{"name":"Visual comparison","time":{"start":1683490156201,"stop":1683490156203,"duration":2},"status":"passed","steps":[],"attachments":[{"uid":"2b16b11140e907a2","name":"Expected screenshot","source":"2b16b11140e907a2.png","type":"image/png","size":101908},{"uid":"4fb45c9133aaa76","name":"Actual screenshot","source":"4fb45c9133aaa76.png","type":"image/png","size":600947},{"uid":"39dd5909c7625687","name":"Visual diff","source":"39dd5909c7625687.png","type":"image/png","size":61384}],"parameters":[],"stepsCount":0,"attachmentsCount":3,"shouldDisplayMessage":false,"hasContent":true}],"attachments":[],"parameters":[],"stepsCount":1,"attachmentsCount":3,"shouldDisplayMessage":false,"hasContent":true}],"labels":[{"name":"tag","value":"firefox"},{"name":"story","value":"Login functionality"},{"name":"tag","value":"Visual"},{"name":"tag","value":"@pytest.mark.usefixtures('setup')"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_login"},{"name":"subSuite","value":"TestLogin"},{"name":"host","value":"fv-az482-84"},{"name":"thread","value":"1769-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_login"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"browser","value":"'firefox'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"c874b44d7390da6b","status":"broken","statusDetails":"Exception: 308651 pixels differ from the expected result","time":{"start":1683490061210,"stop":1683490094048,"duration":32838}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":8,"skipped":0,"passed":0,"unknown":0,"total":8},"items":[{"uid":"d818f22214e65591","reportUrl":"https://alyaothman14.github.io/selenium-visual-testing/visual/19//#testresult/d818f22214e65591","status":"broken","statusDetails":"Exception: 308651 pixels differ from the expected result","time":{"start":1683490062892,"stop":1683490095302,"duration":32410}},{"uid":"ac76bf4ebcd8f0c6","reportUrl":"https://alyaothman14.github.io/selenium-visual-testing/visual/18//#testresult/ac76bf4ebcd8f0c6","status":"broken","statusDetails":"Exception: 308836 pixels differ from the expected result","time":{"start":1683489471307,"stop":1683489503399,"duration":32092}},{"uid":"3243098f3971257b","reportUrl":"https://alyaothman14.github.io/selenium-visual-testing/visual/17//#testresult/3243098f3971257b","status":"broken","statusDetails":"Exception: 304826 pixels differ from the expected result","time":{"start":1683489373506,"stop":1683489405753,"duration":32247}},{"uid":"dd6131cfd277f71b","reportUrl":"https://alyaothman14.github.io/selenium-visual-testing/visual/16//#testresult/dd6131cfd277f71b","status":"broken","statusDetails":"Exception: 304938 pixels differ from the expected result","time":{"start":1683489263258,"stop":1683489296865,"duration":33607}},{"uid":"31e527c04f61202a","reportUrl":"https://alyaothman14.github.io/selenium-visual-testing/visual/15//#testresult/31e527c04f61202a","status":"broken","statusDetails":"Exception: 304954 pixels differ from the expected result","time":{"start":1683489077224,"stop":1683489108764,"duration":31540}},{"uid":"def9849b1f335f25","reportUrl":"https://alyaothman14.github.io/selenium-visual-testing/visual/14//#testresult/def9849b1f335f25","status":"broken","statusDetails":"Exception: 304950 pixels differ from the expected result","time":{"start":1683488729180,"stop":1683488760847,"duration":31667}},{"uid":"67b08c4a1bc67810","reportUrl":"https://alyaothman14.github.io/selenium-visual-testing/visual/12//#testresult/67b08c4a1bc67810","status":"broken","statusDetails":"Exception: 756 pixels differ from the expected result","time":{"start":1683487811400,"stop":1683487830289,"duration":18889}}]},"tags":["firefox","Visual","@pytest.mark.usefixtures('setup')"]},"source":"3eac93c40c1349f6.json","parameterValues":["'firefox'"]}